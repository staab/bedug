{"version":3,"file":"bedug.components.app.js","sources":["bedug/components/app.cljs"],"mappings":";;;;;;;AAOA,2BAAA,3BAAMA;AAAN,AACE,GAAU,AAACC,uBAAO,AAAA,0FAAA,AAAAC,gBAAWC;AAA7B;;AAAA,AACE,IAAAC,WAAMC;AAAN,AAAA,QAAAD;KAAA;AAAA,0FAAA,mDAAA,2CAAA,wDAAA,4BAAA,wHAAA,rCACiDE,wHAAQC;;;KADzD;AAAA,0FAAA,mDAAA,2CAAA,wDAAA,2BAAA,0HAAA,vCAE+CC,0HAASC;;;;AAFxD,0FAAA,mDAAA,2CAAA,wDAAA,oBAAA,0HAAA,wHAAA,4HAAA,3RAG8BD,0HAASF,wHAAQC,4HAAUE","names":["bedug.components.app/app","cljs.core/empty?","cljs.core/deref","bedug.state/full-state","G__10988","bedug.state/path","bedug.components.queue/queue","bedug.components.palette/palette","bedug.components.canvas/canvas","bedug.components.control/control"],"sourcesContent":["(ns bedug.components.app\n  (:require [bedug.state :refer [full-state path]]\n            [bedug.components.canvas :refer [canvas]]\n            [bedug.components.queue :refer [queue]]\n            [bedug.components.palette :refer [palette]]\n            [bedug.components.control :refer [control]]))\n\n(defn app []\n  (when-not (empty? (:players @full-state))\n    (case path\n      \"/control\" [:div {:class \"bedug-control-app\"} [queue] [palette]]\n      \"/canvas\" [:div {:class \"bedug-canvas-app\"} [canvas] [control]]\n      [:div {:class \"bedug-app\"} [canvas] [queue] [palette] [control]])))\n"]}