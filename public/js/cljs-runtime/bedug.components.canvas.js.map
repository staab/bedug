{"version":3,"file":"bedug.components.canvas.js","sources":["bedug/components/canvas.cljs"],"mappings":"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","names":["js/bedug","js/bedug.components","js/bedug.components.canvas","js/bedug.components.canvas.command->attrs","method-table__4414__auto__","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","prefer-table__4415__auto__","method-cache__4416__auto__","cached-hierarchy__4417__auto__","hierarchy__4418__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core/get-global-hierarchy","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","bedug.components.canvas/command->attrs","command","_","attrs","map__10953","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","x","y","r","deg","cljs.core/mod","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/-","cljs.core/+","map__10955","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","bedug.components.canvas/commands->attrs","commands","idx","c","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","p__10959","map__10960","bedug.components.canvas/attrs->transform","p__10962","map__10963","bedug.components.canvas/bug-class","shake","base","bedug.components.canvas/canvas","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","iter__4324__auto__","s__10966","cljs.core/LazySeq","temp__5457__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4322__auto__","size__4323__auto__","cljs.core/count","b__10968","cljs.core/chunk-buffer","i__10967","vec__10969","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","map__10972","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__10965","cljs.core/chunk-rest","vec__10974","cljs.core/first","map__10977","cljs.core/cons","cljs.core/rest","player-id","queue","step","path","cljs.core/deref","bedug.state/full-state","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.take.cljs$core$IFn$_invoke$arity$2","transform","class","cljs.core/last","opacity","bedug.state/player-id","style","cljs.core/chunk-first"],"sourcesContent":["(ns bedug.components.canvas\n  (:require [clojure.string :as str]\n            [bedug.state :refer [full-state] :as s]))\n\n(defmulti command->attrs (fn [command _] command))\n\n(defmethod command->attrs :go-forward\n  [_ attrs]\n  (let [{:keys [x y r]} attrs\n        deg (mod r 360)]\n    (cond\n      (= deg 0) (update attrs :y - 30)\n      (= deg 90) (update attrs :x + 30)\n      (= deg 180) (update attrs :y + 30)\n      (= deg 270) (update attrs :x - 30)\n      :else attrs)))\n\n(defmethod command->attrs :go-backward\n  [_ attrs]\n  (let [{:keys [x y r]} attrs\n        deg (mod r 360)]\n    (cond\n      (= deg 0) (update attrs :y + 30)\n      (= deg 90) (update attrs :x - 30)\n      (= deg 180) (update attrs :y - 30)\n      (= deg 270) (update attrs :x + 30)\n      :else attrs)))\n\n(defmethod command->attrs :rotate-left [_ attrs] (update attrs :r - 90))\n\n(defmethod command->attrs :rotate-right [_ attrs] (update attrs :r + 90))\n\n(defmethod command->attrs :shake [_ attrs] attrs)\n(defmethod command->attrs :turn-blue [_ attrs] (merge attrs {:c \"text-blue\"}))\n(defmethod command->attrs :turn-red [_ attrs] (merge attrs {:c \"text-red\"}))\n(defmethod command->attrs :turn-green [_ attrs] (merge attrs {:c \"text-green\"}))\n\n(defn commands->attrs [commands]\n  (loop [idx 0 attrs {:r 0 :x 0 :y 0 :c \"\"}]\n    (let [c (nth commands idx nil)]\n      (if c (recur (inc idx) (command->attrs c attrs)) attrs))))\n\n(defn attrs->transform [{:keys [x y r]}]\n  (str \"translate(\" x \"px, \" y \"px) rotate(\" r \"deg)\"))\n\n(defn bug-class [{:keys [c]} shake]\n  (let [base (str \"bedug-bug fa fa-3x fa-bug \" c)]\n    (if shake (str base \" shake\") base)))\n\n(defn canvas []\n  [:div {:class \"bedug-canvas\"}\n    (doall\n      (for [[player-id {:keys [queue step path]}] (:players @full-state)\n            :when (not= path \"/canvas\")]\n        (let [commands (take step queue)\n              attrs (commands->attrs commands)\n              transform (attrs->transform attrs)\n              class (bug-class attrs (= (last commands) :shake))\n              opacity (if (= player-id @s/player-id) 1 0.2)\n              style {:transform transform :opacity opacity}]\n           [:i {:class class :key player-id :style style}])))])\n"]}