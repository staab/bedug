{"version":3,"file":"kibo.components.control.js","sources":["kibo/components/control.cljs"],"mappings":";;;AAGA,uCAAA,vCAAMA;AAAN,AAAe,QAAA,AAAAC,gBAAKC,qBAAO,gBAAA,AAAAD,hBAACE,gCAAOC;;AAEnC,gCAAA,hCAAMC;AAAN,AACE,oBACE,AAACL;AACD,iDAAA,1CAACM,sBAAOC;;AACR,OAACC,mDAAMN,iBAAOO;;;AAElB,0CAAA,1CAAMC;AAAN,AACE,oBACE,AAACV;AADH,AAEE,uCAAA,vCAACM,sBAAOJ;;AAFV;;AAGA,GACE,6CAAA,AAAAD,qCAAA,lFAACU,6DAAGJ;AACJ,iDAAA,1CAACD,sBAAOC;;AACR,iDAAA,1CAACD,sBAAOC;;;AAEZ,mCAAA,nCAAMK;AAAN,AACE,IAAMC,WAAS,2IAAA,oBAAA,7JAAI,6CAAA,AAAAZ,qCAAA,lFAACU,6DAAGJ;AAAvB,AACE,GAAM,6CAAA,AAAAN,qCAAA,lFAACU,6DAAGJ;AAAV,AAA2B,yCAAA,zCAACO,WAAcT;;AAA1C;;AAEA,AAACJ,gBAAMC;;AAHT,0FAAA,mDAAA,2CAAA,wDAAA,wBAAA,mFAAA,gDAAA,2CAAA,iEAAA,TAKeW,sEAAmBH","names":["bedug.components.control/done?","cljs.core/deref","bedug.state/step","cljs.core/count","bedug.state/queue","bedug.components.control/tick","cljs.core/reset!","bedug.state/animate","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/inc","bedug.components.control/toggle-animate","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","bedug.components.control/control","p-button","js/setTimeout"],"sourcesContent":["(ns bedug.components.control\n  (:require [bedug.state :as s]))\n\n(defn done? [] (>= @s/step (count @s/queue)))\n\n(defn tick []\n  (if\n    (done?)\n    (reset! s/animate :done)\n    (swap! s/step inc)))\n\n(defn toggle-animate []\n  (when\n    (done?)\n    (reset! s/step 0))\n  (if\n    (= @s/animate :play)\n    (reset! s/animate :pause)\n    (reset! s/animate :play)))\n\n(defn control []\n  (let [p-button (if (= @s/animate :play) \"fa fa-2x fa-pause\" \"fa fa-2x fa-play\")]\n    (when (= @s/animate :play) (js/setTimeout tick 300))\n    ; Gotta deref step to trigger re-render\n    (deref s/step)\n    [:div {:class \"bedug-control\"}\n     [:i {:class p-button :on-click toggle-animate}]]))\n\n"]}