{"version":3,"file":"kibo.components.queue.js","sources":["kibo/components/queue.cljs"],"mappings":";;;;;AAKA,+BAAA,/BAAMA;AAAN,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,sBAEG,AAACC,8CACC,AAACE,oDACC,WAAKC,IAAIC;AAAT,AAAA,+HAAA,2CAAA,qKAAA,6DAAA,lTACGC,6BACAD,uGACM,6CAAKA,qDAAQD;AAHtB,AAIe,OAACG,mDAAMC,kBAAQC,uBAAWL;;GAL3C,AAAAF,gBAMGM","names":["bedug.components.queue/queue","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","cljs.core/deref","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","idx","command","bedug.components.block/block","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","bedug.state/queue","bedug.utils/vec-remove"],"sourcesContent":["(ns bedug.components.queue\n  (:require [bedug.utils :refer [vec-remove]]\n            [bedug.state :as s]\n            [bedug.components.block :refer [block]]))\n\n(defn queue []\n  [:div {:class \"bedug-queue\"}\n   (doall\n     (map-indexed\n       (fn [idx command]\n         [block\n          command\n          {:key (str command idx)\n           :on-click #(swap! s/queue vec-remove idx)}])\n       @s/queue))])\n"]}